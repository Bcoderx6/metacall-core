name: Build and Push Docker Image for Multiple Architectures
on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop # TODO: Remove this
    tags:
      - 'v*.*.*'
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
env:
  IMAGE_NAME: index.docker.io/metacall/core
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v6
          - linux/arm/v7
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Define Platform
        run: |
          PLATFORM=${{ matrix.platform }}
          echo "METACALL_PLATFORM=${PLATFORM}" >> $GITHUB_ENV
          echo "METACALL_PLATFORM_PAIR=${PLATFORM//\//-}" >> $GITHUB_ENV
      
      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Build and Push MetaCall Docker Images
        id: build_and_push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Export Digest
        if: github.event_name != 'pull_request'
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build_and_push.outputs.digest }}"
          touch "/tmp/digests/${METACALL_PLATFORM_PAIR}_${digest#sha256:}"
      
      - name: Upload Digest
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
      
      - name: Logout from DockerHub
        if: always()
        run: docker logout

  merge:
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Digests
        uses: actions/download-artifact@v4
        with:
          name: digests
          path: /tmp/digests
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Create and Push Manifest List
        run: |
          platforms=("linux-amd64" "linux-arm64" "linux-arm-v6" "linux-arm-v7")
          manifests=""
          for platform in "${platforms[@]}"; do
            digest=$(cat /tmp/digests/${platform}_*)
            manifests="${manifests} ${IMAGE_NAME}@${digest}"
          done
          docker buildx imagetools create -t ${IMAGE_NAME}:${{ steps.meta.outputs.version }} ${manifests}
          docker buildx imagetools create -t ${IMAGE_NAME}:latest ${manifests}
      
      - name: Inspect Image
        run: |
          docker buildx imagetools inspect ${IMAGE_NAME}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${IMAGE_NAME}:latest
      
      - name: Logout from DockerHub
        if: always()
        run: docker logout
